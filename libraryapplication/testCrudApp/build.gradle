plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.my'


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webflux-ui', version: '2.0.2'
    implementation "jakarta.transaction:jakarta.transaction-api"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.3'
    implementation 'org.hibernate.orm:hibernate-core:6.2.0.Final'
    implementation 'org.antlr:antlr4:4.13.0'



    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


}

tasks.named('test') {
    useJUnitPlatform()
}

task run(type: JavaExec) {
    mainClass = 'com.my.testcrudapp.TestCrudAppApplication'
    classpath = sourceSets.main.runtimeClasspath
}
